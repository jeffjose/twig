[[time]]
# Basic time format (default if not specified)
name = "datetime"
format = "%H:%M:%S"

[[time]]
# Basic time format (default if not specified)
name = "t"
format = "(%H:%M:%S)"

[[time]]
# Basic time format (default if not specified)
name = "tt"
format = "(%H:%M:%S)"


[[hostname]]
name = "host"
# Hostname-specific options could go here
# format = "{}" # for future use

[[ip]]
name = "ip"
# IP-specific options could go here
# interface = "lo"

[[cwd]]
name = "dir"
# If true, shows only the current directory name
# If false, shows full path
shorten = false

# Battery/Power configurations
#
# Available variables for power formats:
# {percentage}     - Battery percentage (0-100)
# {status}        - Battery state (Charging/Discharging/Full/Empty/Unknown)
# {time_left}     - Time until charged/discharged (e.g. "2h 30m")
# {power_now}     - Current power (W) with sign (positive when charging, negative when discharging)
# {energy_now}    - Current energy level (Wh)
# {energy_full}   - Maximum energy capacity (Wh)
# {voltage}       - Battery voltage (V)
# {temperature}   - Battery temperature (°C)
# {capacity}      - Battery health percentage (0-100)
# {cycle_count}   - Number of charge cycles
# {technology}    - Battery technology (e.g. "Li-ion")
# {manufacturer}  - Battery manufacturer
# {model}         - Battery model
# {serial}        - Battery serial number
#
# Example formats:
# "{percentage}% {status}"                    - "85% Charging"
# "{percentage}% {status} ({time_left})"      - "85% Charging (1:30)"
# "{status} {percentage}% {power_now}W"       - "Charging 85% +45.2W"
# "{voltage}V {power_now}W"                   - "12.1V +45.2W"
# "{capacity}% health, {cycle_count} cycles"  - "94% health, 234 cycles"

[[power]]
name = "bat"
format = "{percentage}% ({power_now}W)"  # Shows percentage and power usage with sign

[prompt]
# Available variables with optional formatting:
# {var} or {var:format} - For configured variables
# {$ENV_VAR} or {$ENV_VAR:format} - For environment variables
# {"text"} or {"text":format} - For literal text
#
# Format can be a comma-separated list of:
# Colors: red, green, yellow, blue, magenta, cyan, white
#         bright_red, bright_green, bright_yellow, bright_blue,
#         bright_magenta, bright_cyan, bright_white
# Styles: bold, italic, normal
format = """
{"→":cyan} {"normal"} {"bold":red,bold} {"italic":yellow,italic}
-({datetime:cyan} {t} {host:magenta} {ip:magenta} {dir:green} {$USER:yellow})- {bat}
# """

# Or another example:
# format = '''
# ┌─[{time:cyan}] - [{host:magenta}]
# └─[{dir:green}] $'''

# Test different combinations of colored and non-colored variables
# Other format examples:
# All colored:
# format = "-({time:cyan} {hostname:blue} {ip:magenta} {cwd:green})-"

# All non-colored:
# format = "-({time} {hostname} {ip} {cwd})-"

# Mixed with repeating variables:
# format = "{hostname:cyan} [{time}] ({hostname}) {cwd:green} ({time:red})"

# Examples of using named variables:
# format = "[{host:cyan}:{dir:blue}] {time:green} ({utc:yellow})"
# format = "{time} - {utc} - {host}"

# Examples using environment variables:
# format = "[{$USER}@{host}] {time}"
# format = "{time} [{$PWD:blue}] {$SHELL:green}"
# format = "{$LANG} - {$TERM} - {time}"

[daemon]
# How often the daemon updates data (in seconds)
# Defaults to 1 second if not specified
frequency = 1

# How long before cached data is considered stale (in seconds)
# When using cached data in interactive mode, data older than this will be refreshed
# Defaults to 5 seconds if not specified
stale_after = 5

# Path to store daemon data (JSON format)
# Can be absolute or relative to config directory
# Defaults to "data.json" in the same directory as config.toml
#data_file = "/tmpdata.json"
